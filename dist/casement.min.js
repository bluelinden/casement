/*! For license information please see casement.min.js.LICENSE.txt */
!function(e,s){"object"==typeof exports&&"object"==typeof module?module.exports=s():"function"==typeof define&&define.amd?define([],s):"object"==typeof exports?exports.casement=s():e.casement=s()}(self,(()=>(()=>{"use strict";var e={d:(s,n)=>{for(var t in n)e.o(n,t)&&!e.o(s,t)&&Object.defineProperty(s,t,{enumerable:!0,get:n[t]})},o:(e,s)=>Object.prototype.hasOwnProperty.call(e,s),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},s={};e.r(s),e.d(s,{Inside:()=>n,Outside:()=>t});class n{init(){window.addEventListener("message",(e=>{this.handleIncoming})),window.parent.postMessage({type:"casement-inside-ready",name:this.name},this.allowedDomain)}send(e){return new Promise(((s,n)=>{window.parent.postMessage({type:"casement-inside-message",message:e},this.allowedDomain)}))}request(e){return new Promise((s=>{window.parent.postMessage({type:`casement-${this.name}-inside-request`,transmissionID:Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15),message:e},this.allowedDomain);const n=t=>{t.origin===this.allowedDomain&&t.data.type===`casement-${this.name}-outside-response`&&t.data.transmissionID===e.transmissionID&&(window.removeEventListener("message",n),s(t.data.message))};window.addEventListener("message",n)}))}handleIncoming(e){e.origin===this.allowedDomain&&(e.data.type===`casement-${this.name}-outside-message`&&(this.onMessage?this.onMessage(e.data.message):console.warn('Casement Error: Received a message from outside but no handler was set. Remember to pass a handler function to the "onMessage" option when creating a new casement.Inside instance.')),e.data.type===`casement-${this.name}-outside-request`&&(this.onMessage?window.parent.postMessage({type:`casement-${this.name}-inside-response`,message:this.onMessage(e.data.message)},this.allowedDomain):console.warn('Casement Error: Received a request from outside but no handler was set. Remember to pass a handler function to the "onMessage" option when creating a new casement.Inside instance.')))}constructor(e){this.name=e.name,this.allowedDomain=e.allowedDomain,e.onReady&&(this.onReady=e.onReady),e.onMessage&&(this.onMessage=e.onMessage),this.init()}}class t{init(){window.addEventListener("message",(e=>{this.handleIncoming}))}send(e){this.allowSend?this.iFrame.contentWindow.postMessage({type:"casement-outside-message",message:e},this.allowedDomain):console.warn("Casement Error: Cannot send message. The iFrame has not yet loaded, or has not yet confirmed that it is ready.")}request(e){if(this.allowSend)return new Promise((s=>{this.iFrame.contentWindow.postMessage({type:`casement-${this.name}-outside-request`,transmissionID:Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15),message:e},this.allowedDomain);const n=t=>{t.origin===this.allowedDomain&&t.data.type===`casement-${this.name}-inside-response`&&t.data.transmissionID===e.transmissionID&&(window.removeEventListener("message",n),s(t.data.message))};window.addEventListener("message",n)}));console.warn("Casement Error: Cannot send message. The iFrame has not yet loaded, or has not yet confirmed that it is ready.")}handleIncoming(e){if(e.origin===this.allowedDomain)switch(e.data.type){case`casement-${this.name}-inside-ready`:this.allowSend=!0,this.onReady&&this.onReady();break;case`casement-${this.name}-inside-message`:this.onMessage?this.onMessage(e.data.message):console.warn('Casement Error: Received a message from inside but no handler was set. Remember to pass a handler function to the "onMessage" option when creating a new casement.Outside instance.');break;case`casement-${this.name}-inside-request`:this.onMessage?window.parent.postMessage({type:`casement-${this.name}-outside-response`,message:this.onMessage(e.data.message)},this.allowedDomain):console.warn('Casement Error: Received a request from inside but no handler was set. Remember to pass a handler function to the "onMessage" option when creating a new casement.Outside instance.')}}kill(e=!1){this.onKill&&this.onKill(),this.iFrame.contentWindow.postMessage({type:"casement-outside-kill"},this.allowedDomain);const s=e=>{e.origin===this.allowedDomain&&"casement-inside-kill-ready"===e.data.type&&(this.iFrame.remove(),window.removeEventListener("message",s))};e?e&&this.iFrame.remove():window.addEventListener("message",s)}constructor(e){this.allowSend=!1,this.name=e.name,this.pageUrl=e.pageUrl||"/",this.allowedDomain=this.pageUrl.split("/").slice(0,3).join("/"),e.onReady&&(this.onReady=e.onReady),e.onMessage&&(this.onMessage=e.onMessage),e.container?(this.container=e.container,this.iFrame=document.createElement("iframe"),this.iFrame.src=this.pageUrl,this.container.appendChild(this.iFrame)):e.iFrame&&(this.iFrame=e.iFrame),this.init()}}return s})()));